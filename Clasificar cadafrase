import asyncio
import httpx
import json
import os
from tqdm import tqdm

API_KEY = "  # <--- Sustituye por tu clave real
API_URL = "https://api.deepseek.com/v1/chat/completions"
MODELO = "deepseek-chat"
FRASIS_PATH = "resultados/frases_extraidas.json"
CLASIFICADAS_PATH = "resultados/frases_clasificadas.json"

async def clasificar_tipo(frase):
    prompt = f"""
Eres un analista experto en proyectos de ciencia ciudadana.

Clasifica esta frase como perteneciente a uno de estos tres tipos:
- "intensidad": si se refiere a formas, niveles o etapas de participaciÃ³n ciudadana
- "diversidad": si se refiere a la pluralidad de actores o colectivos involucrados
- "ninguno": si no se relaciona con ninguno de los anteriores

Frase: "{frase}"

Responde solo una palabra: intensidad, diversidad o ninguno.
"""
    headers = {"Authorization": f"Bearer {API_KEY}", "Content-Type": "application/json"}
    payload = {
        "model": MODELO,
        "messages": [{"role": "system", "content": "Eres un experto en ciencia ciudadana."},
                     {"role": "user", "content": prompt}],
        "temperature": 0.1,
        "max_tokens": 5
    }

    async with httpx.AsyncClient(timeout=60.0) as client:
        r = await client.post(API_URL, headers=headers, json=payload)
        r.raise_for_status()
        content = r.json()["choices"][0]["message"]["content"].strip().lower()
        return content if content in ["intensidad", "diversidad", "ninguno"] else "ninguno"

async def procesar_clasificacion():
    with open(FRASIS_PATH, "r", encoding="utf-8") as f:
        documentos = json.load(f)

    for doc in documentos:
        frases_nuevas = []
        print(f"\nðŸ“„ Clasificando: {doc['archivo']}")
        for frase in tqdm(doc["frases"], desc="Clasificando frases"):
            tipo = await clasificar_tipo(frase)
            frases_nuevas.append({"frase": frase, "tipo": tipo})
        doc["frases_clasificadas"] = frases_nuevas
        del doc["frases"]  # quitamos las originales

    with open(CLASIFICADAS_PATH, "w", encoding="utf-8") as f:
        json.dump(documentos, f, indent=2, ensure_ascii=False)
    print(f"\nâœ… ClasificaciÃ³n completada. Guardado en: {CLASIFICADAS_PATH}")

if __name__ == "__main__":
    asyncio.run(procesar_clasificacion())
